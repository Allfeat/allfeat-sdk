// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { Key } from "../shared/Key";
import type { Language } from "../shared/Language";
import type { ClassicalInfo } from "./ClassicalInfo";
import type { Creator } from "./Creator";
import type { MusicalWorkType } from "./MusicalWorkType";

/**
 * Represents a musical composition or songwriting work.
 *
 * This structure contains all metadata related to the creation and composition
 * of a musical work, including creator information, musical characteristics,
 * and industry identifiers.
 *
 * # Examples
 *
 * ## Simple Song
 *
 * ```rust
 * use allfeat_midds_v2::{
 *     musical_work::{MusicalWork, Creator, CreatorRole},
 *     shared::PartyId,
 *     shared::{Language, Key},
 * };
 *
 * let song = MusicalWork {
 *     iswc: b"T1234567890".to_vec().try_into().unwrap(),
 *     title: b"My Song".to_vec().try_into().unwrap(),
 *     creation_year: Some(2024),
 *     instrumental: Some(false),
 *     language: Some(Language::English),
 *     bpm: Some(120),
 *     key: Some(Key::C),
 *     work_type: None,
 *     creators: vec![Creator {
 *         id: PartyId::Ipi(123456789),
 *         role: CreatorRole::Composer,
 *     }].try_into().unwrap(),
 *     classical_info: None,
 * };
 * ```
 *
 * ## Collaborative Work
 *
 * ```rust
 * use allfeat_midds_v2::{
 *     musical_work::{MusicalWork, Creator, CreatorRole},
 *     shared::PartyId,
 *     shared::Language,
 * };
 *
 * let collaborative_work = MusicalWork {
 *     iswc: b"T9876543210".to_vec().try_into().unwrap(),
 *     title: b"Collaborative Song".to_vec().try_into().unwrap(),
 *     creation_year: Some(2024),
 *     instrumental: Some(false),
 *     language: Some(Language::English),
 *     bpm: None,
 *     key: None,
 *     work_type: None,
 *     creators: vec![
 *         Creator {
 *             id: PartyId::Ipi(111111111),
 *             role: CreatorRole::Author,
 *         },
 *         Creator {
 *             id: PartyId::Ipi(222222222),
 *             role: CreatorRole::Composer,
 *         },
 *     ].try_into().unwrap(),
 *     classical_info: None,
 * };
 * ```
 */
export type MusicalWork = { 
/**
 * The ISWC (International Standard Musical Work Code) uniquely identifying the work.
 */
iswc: string, 
/**
 * The title of the musical work.
 */
title: string, 
/**
 * The year the work was created (4-digit Gregorian year).
 */
creationYear?: number, 
/**
 * Indicates whether the work is instrumental (i.e., without lyrics).
 */
instrumental?: boolean, 
/**
 * The optional language of the lyrics (if any).
 */
language?: Language, 
/**
 * Optional tempo in beats per minute (BPM).
 */
bpm?: number, 
/**
 * Optional musical key of the work (e.g., C, G#, etc.).
 */
key?: Key, 
/**
 * Type of the musical work (original, medley, mashup, or adaptation).
 */
workType?: MusicalWorkType, 
/**
 * List of contributors to the work, along with their roles.
 */
creators: Array<Creator>, 
/**
 * Additional info if the work is a classical one.
 */
classicalInfo?: ClassicalInfo, };
