// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.
import type { BothIdsContainer } from "./BothIdsContainer";

/**
 * Flexible identifier for parties in the music industry.
 *
 * This enum allows identification using either IPI, ISNI, or both identifiers,
 * providing maximum flexibility for different industry use cases.
 *
 * # Examples
 *
 * ```rust
 * use allfeat_midds_v2::shared::{PartyId, BothIdsContainer};
 *
 * // Using only IPI
 * let party_ipi = PartyId::Ipi(123456789);
 *
 * // Using only ISNI
 * let party_isni = PartyId::Isni(b"000000012345678X".to_vec().try_into().unwrap());
 *
 * // Using both identifiers
 * let party_both = PartyId::Both(BothIdsContainer {
 *     ipi: 123456789,
 *     isni: b"000000012345678X".to_vec().try_into().unwrap(),
 * });
 * ```
 */
export type PartyId = { "Ipi": bigint } | { "Isni": string } | { "Both": BothIdsContainer };
